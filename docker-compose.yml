version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:8.4.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports: ["2181:2181"]

  kafka:
    image: confluentinc/cp-kafka:8.4.1
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ecommerce
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongo:
    image: mongo:6
    ports: ["27017:27017"]
    volumes:
      - mongodata:/data/db

  # Services (built locally)
  auth-service:
    build: ./auth-service
    ports: ["8081:8080"]
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - JWT_SECRET=VerySecretKeyChangeMe
    depends_on:
      - postgres
      - kafka

  product-service:
    build: ./product-service
    ports: ["8082:8080"]
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/catalog
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - mongo
      - kafka

  cart-service:
    build: ./cart-service
    ports: ["8083:8080"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - postgres
      - kafka

  order-service:
    build: ./order-service
    ports: ["8084:8080"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - QUARTZ_THREAD_COUNT=3
    depends_on:
      - postgres
      - kafka

  payment-service:
    build: ./payment-service
    ports: ["8085:8080"]
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/ecommerce
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
    depends_on:
      - postgres
      - kafka

volumes:
  pgdata:
  mongodata:
